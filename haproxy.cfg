global
    log stdout format raw local0

defaults
    log global
    option  http-server-close
    option  dontlognull
    option  redispatch
    option  contstats
    retries 3
    backlog 10000
    timeout client          25s
    timeout connect          5s
    timeout server          25s
    # timeout tunnel available in ALOHA 5.5 or HAProxy 1.5-dev10 and higher
    timeout tunnel        3600s
    timeout http-keep-alive  1s
    timeout http-request    15s
    timeout queue           30s
    timeout tarpit          60s
    default-server inter 3s rise 2 fall 3

frontend http_front
    mode http
    option httplog
    option forwardfor

    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }
    bind *:443 ssl crt /etc/letsencrypt/live/sensority.app/full.pem

    ## routing based on Host header
    acl host_my_sensority_app hdr_beg(Host) -i my.
    acl host_logs_sensority_app hdr_beg(Host) -i logs.
    acl host_sensority_app hdr(host) -i sensority.app

    ## routing based on websocket protocol header
    acl hdr_connection_upgrade hdr(Connection)  -i upgrade
    acl hdr_upgrade_websocket  hdr(Upgrade)     -i websocket

    redirect prefix https://my.sensority.app code 301 if host_sensority_app

    use_backend log_streamer if host_logs_sensority_app hdr_connection_upgrade hdr_upgrade_websocket
    use_backend core_backend if host_my_sensority_app
    default_backend core_backend

frontend ssh_front
    mode tcp
    option tcplog
    bind *:2222
    acl host_git_sensority_app hdr(host) -i git.sensority.app
    use_backend ssh_backend if host_git_sensority_app
    default_backend ssh_backend

backend core_backend
    mode http
    server core_service core:8000 check

backend ssh_backend
    mode tcp
    server ssh_service core:22 check

backend log_streamer
    mode http
    ## websocket protocol validation
    acl hdr_connection_upgrade hdr(Connection)                 -i upgrade
    acl hdr_upgrade_websocket  hdr(Upgrade)                    -i websocket
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_connection_upgrade ! hdr_upgrade_websocket ! hdr_websocket_key ! hdr_websocket_version
    http-response add-header Access-Control-Allow-Origin *
    ## websocket health checking
    # option httpchk GET / HTTP/1.1rnHost:\ ws.domain.comrnConnection:\ Upgrade\r\nUpgrade:\ websocket\r\nSec-WebSocket-Key:\ haproxy\r\nSec-WebSocket-Version:\ 13\r\nSec-WebSocket-Protocol:\ echo-protocol
    # http-check expect status 101

    server log_service log_streamer:8088 check
